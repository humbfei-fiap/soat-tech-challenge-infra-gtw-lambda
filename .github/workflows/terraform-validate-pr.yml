name: 'Terraform Validate and Create PR'

# Gatilho: Acionado em qualquer push para branches que começam com 'feature/'
on:
  push:
    branches:
      - 'feature/**'

permissions:
  id-token: write   # Necessário para autenticação OIDC com a AWS
  contents: write   # Necessário para criar o Pull Request
  pull-requests: write # Necessário para criar o Pull Request

jobs:
  validate-and-plan:
    name: 'Validate and Plan Terraform'
    runs-on: ubuntu-latest
    
    steps:
      # 1. Faz o checkout do código
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configura as credenciais da AWS via OIDC (a mesma configuração do exemplo anterior)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # Use o segredo do repositório
          aws-region: ${{ secrets.AWS_REGION }} # Use o segredo do repositório

      # 3. Instala e configura o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.5

      # 4. Inicializa o Terraform
      - name: Terraform Init
        id: init
        run: terraform init

      # 5. Valida a sintaxe do código
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      # 6. Gera o plano de execução para garantir que a lógica está correta
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

  create-pull-request:
    name: 'Create Pull Request'
    runs-on: ubuntu-latest
    # Este job só roda se o job 'validate-and-plan' for bem-sucedido
    needs: [validate-and-plan] 

    steps:
      # Ação popular e robusta para criar Pull Requests automaticamente
      - name: Create Pull Request to Develop
        uses: peter-evans/create-pull-request@v6
        with:
          # Token de autenticação automático do GitHub
          token: ${{ secrets.GITHUB_TOKEN }}
          
          # Título do Pull Request
          title: 'feature: Merge ${{ github.ref_name }} into develop'
          
          # Corpo do Pull Request (pode ser personalizado)
          body: |
            Pull Request automático da branch `${{ github.ref_name }}`.
            - Validação e Plano do Terraform executados com sucesso.
            - Pronto para revisão e merge na `develop`.
          
          # Branch de destino
          base: develop
          
          # Branch de origem (a branch atual do feature)
          branch: ${{ github.ref_name }}
          
          # Adiciona o autor do commit como "assignee" do PR
          assignees: ${{ github.actor }}
          
          # Adiciona labels para organização
          labels: terraform, automated-pr